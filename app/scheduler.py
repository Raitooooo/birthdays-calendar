from datetime import date, datetime
from aiogram import Bot
import pytz # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏

from app.crud import user_crud

async def send_birthday_notifications(bot: Bot):
  """
  –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –∫–æ–≥–æ-—Ç–æ —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è, –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
  """
  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ—Å–∫–æ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
  moscow_tz = pytz.timezone('Europe/Moscow')
  today = date.today()

  users = await user_crud.get_all_users()
  birthday_users = []

  for user in users:
    birthday_str = user.get('birthday')
    if not birthday_str:
      continue
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –∏–∑ —Å—Ç—Ä–æ–∫–∏
    user_birthday = date.fromisoformat(birthday_str)
    
    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–µ–Ω—å –∏ –º–µ—Å—è—Ü
    if user_birthday.month == today.month and user_birthday.day == today.day:
      birthday_users.append(user)
  
  # –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –µ—Å—Ç—å –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∏, —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if birthday_users:
    message_parts = ["üéâ –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ—á–∞—é—Ç:\n"]
    
    for user in birthday_users:
      # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç
      age = today.year - date.fromisoformat(user['birthday']).year
      user_name = user.get("name", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
      user_username = f"(@{user['username']})" if user.get('username') else ""
      message_parts.append(f" - {user_name} {user_username}! –ò—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è {age} ‚ú®")
    
    notification_text = "\n".join(message_parts)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞
    all_users_to_notify = await user_crud.get_all_users()
    for user_to_notify in all_users_to_notify:
      try:
        await bot.send_message(chat_id=user_to_notify['tg_id'], text=notification_text)
      except Exception as e:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞, –º—ã –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_to_notify['tg_id']}: {e}")

async def send_test_notification(bot: Bot):
  """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ."""
  
  # !!! –ó–ê–ú–ï–ù–ò–¢–ï –≠–¢–û–¢ ID –ù–ê –°–í–û–ô !!!
  your_telegram_id = 1217384124 
  
  current_time = datetime.now(pytz.timezone('Europe/Moscow')).strftime("%H:%M:%S")
  
  try:
    await bot.send_message(
      chat_id=your_telegram_id, 
      text=f"–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –≤ {current_time}. –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    )
    print("–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
  except Exception as e:
    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {e}")